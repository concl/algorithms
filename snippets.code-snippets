// paste in vscode snippets file

{
	"C++ Competitive Programming Template": {
        "prefix": "cp_setup",
        "body": [
            "#include <bits/stdc++.h>",
			"#include <ext/pb_ds/assoc_container.hpp>",
			"#define ll long long",
			"#define ll long long",
			"#define ld long double",
			"#define pb push_back",
			"#define mp make_pair",
			"#define pii pair<int, int>",
			"#define pll pair<ll, ll>",
			"#define vi vector<int>",
			"#define vll vector<ll>",
			"#define vvi vector<vi>",
			"#define vvl vector<vll>",
			"#define endl \"\\n\"",
			"#define all(x) (x).begin(), (x).end()",
			"#define elif else if",
			"#define safe_map unordered_map<ll, int, custom_hash>",
			"#define safe_set unordered_set<ll, custom_hash>",
			"#define safe_hash_table gp_hash_table<ll, int, custom_hash>",
            "using namespace std;",
			"using namespace __gnu_pbds;",
			"",
			"",
			"struct custom_hash {",
			"    static uint64_t splitmix64(uint64_t x) {",
			"        // http://xorshift.di.unimi.it/splitmix64.c",
			"        x += 0x9e3779b97f4a7c15;",
			"        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
			"        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
			"        return x ^ (x >> 31);",
			"    }",
			"    size_t operator()(uint64_t x) const {",
			"        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
			"        return splitmix64(x + FIXED_RANDOM);",
			"    }",
			"};",
            "",
            "int main() {",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(NULL);",
			"    ",
            "    $1",
			"    ",
            "    return 0;",
            "}"
        ],
        "description": "C++ Competitive Programming Template"
    }
}